---

export interface Props {
  title: string;
  description: string;
  image: string;
  tags: {
    name: string;
    class: string;
    icon: any; // Cambia a un tipo más específico si sabes el tipo exacto del icono
  }[];
  link?: string; // Opcional
}
const { title, description ,image, tags, link} = Astro.props;
---

<container class="gap-3 order-first justify-start py-2 flex mx-3 flex-wrap flex-row ">
<div class="mx-2 text-wrap flex space-x-2 grid-rows-2 flex-wrap overflow-hidden gap-3  rounded-2xl shadow-2xl max-w-80  bg-gradient bg-gradient-to-l from-purple-600/50 to-blue-800/40 bg-clip-padding ">
  <a href={link}>
      <img class="object-cover h-auto rounded-t-lg blur-[0.3px]"  src={image} alt={title} />
  </a>
  <div class="mx-3 flex-wrap flex">
      <a href={link}
          <h2 class="text-2xl font-bold tracking-tight opacity-90 box-decoration-slice  text-yellow-300/80 px-2 text-center mx-24">{title}</h2>
      </a>
      <p class="mb-3 mx-4 list-none font-sans text-pretty text-gray-400">{description}</p>
      <div class="gap-3 mx-2 ">
        {tags.map(tag => (
          <div class={`relative px-1.5 py-1 transition-all ease-in duration-75 bg-white dark:bg-gray-900 rounded-md group-hover:bg-opacity-0 ${tag.class}`}>
            <tag.icon class="gap-3 flex-wrap text-pretty mr-1" /> {tag.name}
          </div>
        ))}
      </div>
  </div>
</div>
</container>